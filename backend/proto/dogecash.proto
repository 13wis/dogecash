syntax = "proto3";

option go_package = "github.com/l3wis/dogecash";

package proto;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service Dogecash {
    rpc Viewer(google.protobuf.Empty) returns (ViewerResponse);
    rpc SignIn(AuthenticationRequest) returns (google.protobuf.Empty);
    rpc Register(AuthenticationRequest) returns (google.protobuf.Empty);
    rpc DogetagAvailable(DogetagAvailableRequest) returns (DogetagAvaiableResponse);
    rpc UpdateDogetag(UpdateDogetagRequest) returns (google.protobuf.Empty);
    rpc UpdateStripeInfo(UpdateStripeInfoRequest) returns (google.protobuf.Empty);
    rpc UpdateExternalAccount(UpdateExternalAccountRequest) returns (google.protobuf.Empty);
    rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc ForgotPassword(ForgotPasswordRequest) returns (google.protobuf.Empty);
    rpc VerifyCode(VerifyCodeRequest) returns (google.protobuf.Empty);
    rpc ResetPassword(ResetPasswordRequest) returns (google.protobuf.Empty);
    rpc MyDoges(google.protobuf.Empty) returns (MyDogesResponse);
    rpc Balance(google.protobuf.Empty) returns (BalanceResponse);
    rpc ExternalAccounts(google.protobuf.Empty) returns (ExternalAccountsResponse);
    rpc SearchDoges(stream SearchDogesRequest) returns (stream SearchDogesResponse);
    rpc Pay(PayRequest) returns (Activity);
    rpc SendRequest(SendRequestRequest) returns (Activity);
    rpc AddCash(AddCashRequest) returns (google.protobuf.Empty);
    rpc CashOut(CashOutRequest) returns (Activity);
    rpc Activities(ActivityRequest) returns (ActivityRepeated);
    rpc NewCardholder(NewCardholderRequest) returns (google.protobuf.Empty);
    rpc DogeCard(DogeCardRequest) returns (DogeCardResponse);
    rpc Predictions(stream PredictionsRequest) returns (stream PredictionsResponse);
}

message AuthenticationRequest {
    string email = 1;
    string password = 2;
}

// We can use this on the client side to parse
// values from the response, but on the server side
// this enum complicates the GORM scan operation
enum InteractionType {
    recent = 0;
    suggested = 1;
}

message BaseDoge {
    int64 id = 1;
    optional string dogetag = 2;
    string email = 3;
    optional string first_name = 4;
    optional string last_name = 5;
    optional string profile_pic_url = 6;
    optional string interaction_type = 7;
}

message ViewerResponse {
    BaseDoge doge = 1;
    google.protobuf.Timestamp created_at = 2;
    optional string dob = 3;
    bool external_account_linked = 4;
    bool stripe_account_created = 5;
    optional string token = 6;
}

message DogetagAvailableRequest {
    string dogetag = 1;
}

message DogetagAvaiableResponse {
    bool available = 1;
}

message UpdateDogetagRequest {
    string dogetag = 1;
}

message UpdateStripeInfoRequest {
    optional int64 day = 1;
    optional int64 month = 2;
    optional int64 year = 3;
    optional string first_name = 4;
    optional string last_name = 5;
    bool create = 6;
}

message UpdateExternalAccountRequest {
    string token = 1;
    enum ExternalAccountType {
        bank_account = 0;
        card = 1;
    }
    ExternalAccountType external_account_type = 2;
}

message ForgotPasswordRequest {
    string email = 1;
}

message VerifyCodeRequest {
    string email = 1;
    string code = 2;
}

message ResetPasswordRequest {
    string email = 1;
    string code = 2;
    string password = 3;
}

message MyDogesResponse {
    repeated BaseDoge doges = 1;
}

message BalanceResponse {
    int64 balance = 1;
}

message ExternalAccount {
    string external_account_type = 1;
    optional string bank_name = 2;
    optional string brand = 3;
    optional string last4 = 4;
    optional int64 exp_month = 5;
    optional int64 exp_year = 6;
    optional bool eligible = 7;
}

message ExternalAccountsResponse {
    repeated ExternalAccount external_account = 1;
}

message SearchDogesResponse {
    repeated BaseDoge doge = 1;
}

message PayRequest {
    int64 amount = 1;
    optional string note = 2;
    optional int64 requestId = 3;
    enum SourceType {
        account = 0;
        bank_account = 1;
        card = 2;
    }
    SourceType source_type = 4;
    int64 to = 5;
}

message SendRequestRequest {
    int64 amount = 1;
    optional string note = 2;
    int64 to = 3;
}

message AddCashRequest {
    int64 amount = 1;
    string external_account_type = 2;
}

message CashOutRequest {
    int64 amount = 1;
    string external_account_type = 2;
    bool instant = 3;
}

message SearchDogesRequest {
    string query = 1;
    optional int32 limit = 2;
}

message ActivityRequest {
    optional int64 peer = 1;
    optional int32 limit = 2;
    optional int64 activityId = 3;
}

message Activity {
    int64 id = 1;
    enum ActivityType {
        add_cash = 0;
        cash_out = 1;
        pay = 2;
        request = 3;
    }
    ActivityType activity_type = 2;
    int64 amount = 3;
    optional int64 arrival_date = 4;
    optional int64 created = 5;
    optional ExternalAccount external_account = 6;
    optional string note = 7;
    optional bool refunded = 8;
    int64 source_id = 9;
    optional int64 to_id = 10;
    optional BaseDoge peer = 11;
    optional bool moneyin = 12;
}

message ActivityRepeated {
    repeated Activity activity = 1;
}

message NewCardholderRequest {
    string line1 = 1;
    string city = 2;
    string zip = 3;
    string state = 4;
    string phone = 5;
}

message DogeCardRequest {
    optional bool full = 1;
}

message DogeCardResponse {
    optional string brand = 1;
    optional int64 exp_month = 2;
    optional int64 exp_year = 3;
    optional string last4 = 4;
    optional string number = 5;
    optional string cvc = 6;
}

message PredictionsRequest {
    string input = 1;
}

message PredictionsResponse {
    repeated string description = 1;
}