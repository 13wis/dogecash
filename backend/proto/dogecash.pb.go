// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: dogecash.proto

package dogecash

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// We can use this on the client side to parse
// values from the response, but on the server side
// this enum complicates the GORM scan operation
type InteractionType int32

const (
	InteractionType_recent    InteractionType = 0
	InteractionType_suggested InteractionType = 1
)

// Enum value maps for InteractionType.
var (
	InteractionType_name = map[int32]string{
		0: "recent",
		1: "suggested",
	}
	InteractionType_value = map[string]int32{
		"recent":    0,
		"suggested": 1,
	}
)

func (x InteractionType) Enum() *InteractionType {
	p := new(InteractionType)
	*p = x
	return p
}

func (x InteractionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InteractionType) Descriptor() protoreflect.EnumDescriptor {
	return file_dogecash_proto_enumTypes[0].Descriptor()
}

func (InteractionType) Type() protoreflect.EnumType {
	return &file_dogecash_proto_enumTypes[0]
}

func (x InteractionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InteractionType.Descriptor instead.
func (InteractionType) EnumDescriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{0}
}

type UpdateExternalAccountRequest_ExternalAccountType int32

const (
	UpdateExternalAccountRequest_bank_account UpdateExternalAccountRequest_ExternalAccountType = 0
	UpdateExternalAccountRequest_card         UpdateExternalAccountRequest_ExternalAccountType = 1
)

// Enum value maps for UpdateExternalAccountRequest_ExternalAccountType.
var (
	UpdateExternalAccountRequest_ExternalAccountType_name = map[int32]string{
		0: "bank_account",
		1: "card",
	}
	UpdateExternalAccountRequest_ExternalAccountType_value = map[string]int32{
		"bank_account": 0,
		"card":         1,
	}
)

func (x UpdateExternalAccountRequest_ExternalAccountType) Enum() *UpdateExternalAccountRequest_ExternalAccountType {
	p := new(UpdateExternalAccountRequest_ExternalAccountType)
	*p = x
	return p
}

func (x UpdateExternalAccountRequest_ExternalAccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateExternalAccountRequest_ExternalAccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_dogecash_proto_enumTypes[1].Descriptor()
}

func (UpdateExternalAccountRequest_ExternalAccountType) Type() protoreflect.EnumType {
	return &file_dogecash_proto_enumTypes[1]
}

func (x UpdateExternalAccountRequest_ExternalAccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateExternalAccountRequest_ExternalAccountType.Descriptor instead.
func (UpdateExternalAccountRequest_ExternalAccountType) EnumDescriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{7, 0}
}

type PayRequest_SourceType int32

const (
	PayRequest_account      PayRequest_SourceType = 0
	PayRequest_bank_account PayRequest_SourceType = 1
	PayRequest_card         PayRequest_SourceType = 2
)

// Enum value maps for PayRequest_SourceType.
var (
	PayRequest_SourceType_name = map[int32]string{
		0: "account",
		1: "bank_account",
		2: "card",
	}
	PayRequest_SourceType_value = map[string]int32{
		"account":      0,
		"bank_account": 1,
		"card":         2,
	}
)

func (x PayRequest_SourceType) Enum() *PayRequest_SourceType {
	p := new(PayRequest_SourceType)
	*p = x
	return p
}

func (x PayRequest_SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayRequest_SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_dogecash_proto_enumTypes[2].Descriptor()
}

func (PayRequest_SourceType) Type() protoreflect.EnumType {
	return &file_dogecash_proto_enumTypes[2]
}

func (x PayRequest_SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayRequest_SourceType.Descriptor instead.
func (PayRequest_SourceType) EnumDescriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{16, 0}
}

type Activity_ActivityType int32

const (
	Activity_add_cash Activity_ActivityType = 0
	Activity_cash_out Activity_ActivityType = 1
	Activity_pay      Activity_ActivityType = 2
	Activity_request  Activity_ActivityType = 3
)

// Enum value maps for Activity_ActivityType.
var (
	Activity_ActivityType_name = map[int32]string{
		0: "add_cash",
		1: "cash_out",
		2: "pay",
		3: "request",
	}
	Activity_ActivityType_value = map[string]int32{
		"add_cash": 0,
		"cash_out": 1,
		"pay":      2,
		"request":  3,
	}
)

func (x Activity_ActivityType) Enum() *Activity_ActivityType {
	p := new(Activity_ActivityType)
	*p = x
	return p
}

func (x Activity_ActivityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Activity_ActivityType) Descriptor() protoreflect.EnumDescriptor {
	return file_dogecash_proto_enumTypes[3].Descriptor()
}

func (Activity_ActivityType) Type() protoreflect.EnumType {
	return &file_dogecash_proto_enumTypes[3]
}

func (x Activity_ActivityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Activity_ActivityType.Descriptor instead.
func (Activity_ActivityType) EnumDescriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{22, 0}
}

type AuthenticationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AuthenticationRequest) Reset() {
	*x = AuthenticationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationRequest) ProtoMessage() {}

func (x *AuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticationRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AuthenticationRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type BaseDoge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Dogetag         *string `protobuf:"bytes,2,opt,name=dogetag,proto3,oneof" json:"dogetag,omitempty"`
	Email           string  `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	FirstName       *string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3,oneof" json:"first_name,omitempty"`
	LastName        *string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3,oneof" json:"last_name,omitempty"`
	ProfilePicUrl   *string `protobuf:"bytes,6,opt,name=profile_pic_url,json=profilePicUrl,proto3,oneof" json:"profile_pic_url,omitempty"`
	InteractionType *string `protobuf:"bytes,7,opt,name=interaction_type,json=interactionType,proto3,oneof" json:"interaction_type,omitempty"`
}

func (x *BaseDoge) Reset() {
	*x = BaseDoge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseDoge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseDoge) ProtoMessage() {}

func (x *BaseDoge) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseDoge.ProtoReflect.Descriptor instead.
func (*BaseDoge) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{1}
}

func (x *BaseDoge) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseDoge) GetDogetag() string {
	if x != nil && x.Dogetag != nil {
		return *x.Dogetag
	}
	return ""
}

func (x *BaseDoge) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BaseDoge) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *BaseDoge) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *BaseDoge) GetProfilePicUrl() string {
	if x != nil && x.ProfilePicUrl != nil {
		return *x.ProfilePicUrl
	}
	return ""
}

func (x *BaseDoge) GetInteractionType() string {
	if x != nil && x.InteractionType != nil {
		return *x.InteractionType
	}
	return ""
}

type ViewerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doge                  *BaseDoge              `protobuf:"bytes,1,opt,name=doge,proto3" json:"doge,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Dob                   *string                `protobuf:"bytes,3,opt,name=dob,proto3,oneof" json:"dob,omitempty"`
	ExternalAccountLinked bool                   `protobuf:"varint,4,opt,name=external_account_linked,json=externalAccountLinked,proto3" json:"external_account_linked,omitempty"`
	StripeAccountCreated  bool                   `protobuf:"varint,5,opt,name=stripe_account_created,json=stripeAccountCreated,proto3" json:"stripe_account_created,omitempty"`
	Token                 *string                `protobuf:"bytes,6,opt,name=token,proto3,oneof" json:"token,omitempty"`
}

func (x *ViewerResponse) Reset() {
	*x = ViewerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewerResponse) ProtoMessage() {}

func (x *ViewerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewerResponse.ProtoReflect.Descriptor instead.
func (*ViewerResponse) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{2}
}

func (x *ViewerResponse) GetDoge() *BaseDoge {
	if x != nil {
		return x.Doge
	}
	return nil
}

func (x *ViewerResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ViewerResponse) GetDob() string {
	if x != nil && x.Dob != nil {
		return *x.Dob
	}
	return ""
}

func (x *ViewerResponse) GetExternalAccountLinked() bool {
	if x != nil {
		return x.ExternalAccountLinked
	}
	return false
}

func (x *ViewerResponse) GetStripeAccountCreated() bool {
	if x != nil {
		return x.StripeAccountCreated
	}
	return false
}

func (x *ViewerResponse) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type DogetagAvailableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dogetag string `protobuf:"bytes,1,opt,name=dogetag,proto3" json:"dogetag,omitempty"`
}

func (x *DogetagAvailableRequest) Reset() {
	*x = DogetagAvailableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DogetagAvailableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DogetagAvailableRequest) ProtoMessage() {}

func (x *DogetagAvailableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DogetagAvailableRequest.ProtoReflect.Descriptor instead.
func (*DogetagAvailableRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{3}
}

func (x *DogetagAvailableRequest) GetDogetag() string {
	if x != nil {
		return x.Dogetag
	}
	return ""
}

type DogetagAvaiableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available bool `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *DogetagAvaiableResponse) Reset() {
	*x = DogetagAvaiableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DogetagAvaiableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DogetagAvaiableResponse) ProtoMessage() {}

func (x *DogetagAvaiableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DogetagAvaiableResponse.ProtoReflect.Descriptor instead.
func (*DogetagAvaiableResponse) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{4}
}

func (x *DogetagAvaiableResponse) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type UpdateDogetagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dogetag string `protobuf:"bytes,1,opt,name=dogetag,proto3" json:"dogetag,omitempty"`
}

func (x *UpdateDogetagRequest) Reset() {
	*x = UpdateDogetagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDogetagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDogetagRequest) ProtoMessage() {}

func (x *UpdateDogetagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDogetagRequest.ProtoReflect.Descriptor instead.
func (*UpdateDogetagRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDogetagRequest) GetDogetag() string {
	if x != nil {
		return x.Dogetag
	}
	return ""
}

type UpdateStripeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day       *int64  `protobuf:"varint,1,opt,name=day,proto3,oneof" json:"day,omitempty"`
	Month     *int64  `protobuf:"varint,2,opt,name=month,proto3,oneof" json:"month,omitempty"`
	Year      *int64  `protobuf:"varint,3,opt,name=year,proto3,oneof" json:"year,omitempty"`
	FirstName *string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3,oneof" json:"first_name,omitempty"`
	LastName  *string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3,oneof" json:"last_name,omitempty"`
	Create    bool    `protobuf:"varint,6,opt,name=create,proto3" json:"create,omitempty"`
}

func (x *UpdateStripeInfoRequest) Reset() {
	*x = UpdateStripeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStripeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStripeInfoRequest) ProtoMessage() {}

func (x *UpdateStripeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStripeInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateStripeInfoRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateStripeInfoRequest) GetDay() int64 {
	if x != nil && x.Day != nil {
		return *x.Day
	}
	return 0
}

func (x *UpdateStripeInfoRequest) GetMonth() int64 {
	if x != nil && x.Month != nil {
		return *x.Month
	}
	return 0
}

func (x *UpdateStripeInfoRequest) GetYear() int64 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *UpdateStripeInfoRequest) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *UpdateStripeInfoRequest) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *UpdateStripeInfoRequest) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

type UpdateExternalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token               string                                           `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExternalAccountType UpdateExternalAccountRequest_ExternalAccountType `protobuf:"varint,2,opt,name=external_account_type,json=externalAccountType,proto3,enum=proto.UpdateExternalAccountRequest_ExternalAccountType" json:"external_account_type,omitempty"`
}

func (x *UpdateExternalAccountRequest) Reset() {
	*x = UpdateExternalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExternalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExternalAccountRequest) ProtoMessage() {}

func (x *UpdateExternalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExternalAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateExternalAccountRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateExternalAccountRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateExternalAccountRequest) GetExternalAccountType() UpdateExternalAccountRequest_ExternalAccountType {
	if x != nil {
		return x.ExternalAccountType
	}
	return UpdateExternalAccountRequest_bank_account
}

type ForgotPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ForgotPasswordRequest) Reset() {
	*x = ForgotPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgotPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgotPasswordRequest) ProtoMessage() {}

func (x *ForgotPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgotPasswordRequest.ProtoReflect.Descriptor instead.
func (*ForgotPasswordRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{8}
}

func (x *ForgotPasswordRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type VerifyCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifyCodeRequest) Reset() {
	*x = VerifyCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeRequest) ProtoMessage() {}

func (x *VerifyCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeRequest.ProtoReflect.Descriptor instead.
func (*VerifyCodeRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{9}
}

func (x *VerifyCodeRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *VerifyCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{10}
}

func (x *ResetPasswordRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ResetPasswordRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ResetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type MyDogesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doges []*BaseDoge `protobuf:"bytes,1,rep,name=doges,proto3" json:"doges,omitempty"`
}

func (x *MyDogesResponse) Reset() {
	*x = MyDogesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyDogesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyDogesResponse) ProtoMessage() {}

func (x *MyDogesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyDogesResponse.ProtoReflect.Descriptor instead.
func (*MyDogesResponse) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{11}
}

func (x *MyDogesResponse) GetDoges() []*BaseDoge {
	if x != nil {
		return x.Doges
	}
	return nil
}

type BalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{12}
}

func (x *BalanceResponse) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type ExternalAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalAccountType string  `protobuf:"bytes,1,opt,name=external_account_type,json=externalAccountType,proto3" json:"external_account_type,omitempty"`
	BankName            *string `protobuf:"bytes,2,opt,name=bank_name,json=bankName,proto3,oneof" json:"bank_name,omitempty"`
	Brand               *string `protobuf:"bytes,3,opt,name=brand,proto3,oneof" json:"brand,omitempty"`
	Last4               *string `protobuf:"bytes,4,opt,name=last4,proto3,oneof" json:"last4,omitempty"`
	ExpMonth            *int64  `protobuf:"varint,5,opt,name=exp_month,json=expMonth,proto3,oneof" json:"exp_month,omitempty"`
	ExpYear             *int64  `protobuf:"varint,6,opt,name=exp_year,json=expYear,proto3,oneof" json:"exp_year,omitempty"`
	Eligible            *bool   `protobuf:"varint,7,opt,name=eligible,proto3,oneof" json:"eligible,omitempty"`
}

func (x *ExternalAccount) Reset() {
	*x = ExternalAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAccount) ProtoMessage() {}

func (x *ExternalAccount) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAccount.ProtoReflect.Descriptor instead.
func (*ExternalAccount) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{13}
}

func (x *ExternalAccount) GetExternalAccountType() string {
	if x != nil {
		return x.ExternalAccountType
	}
	return ""
}

func (x *ExternalAccount) GetBankName() string {
	if x != nil && x.BankName != nil {
		return *x.BankName
	}
	return ""
}

func (x *ExternalAccount) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *ExternalAccount) GetLast4() string {
	if x != nil && x.Last4 != nil {
		return *x.Last4
	}
	return ""
}

func (x *ExternalAccount) GetExpMonth() int64 {
	if x != nil && x.ExpMonth != nil {
		return *x.ExpMonth
	}
	return 0
}

func (x *ExternalAccount) GetExpYear() int64 {
	if x != nil && x.ExpYear != nil {
		return *x.ExpYear
	}
	return 0
}

func (x *ExternalAccount) GetEligible() bool {
	if x != nil && x.Eligible != nil {
		return *x.Eligible
	}
	return false
}

type ExternalAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalAccount []*ExternalAccount `protobuf:"bytes,1,rep,name=external_account,json=externalAccount,proto3" json:"external_account,omitempty"`
}

func (x *ExternalAccountsResponse) Reset() {
	*x = ExternalAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAccountsResponse) ProtoMessage() {}

func (x *ExternalAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAccountsResponse.ProtoReflect.Descriptor instead.
func (*ExternalAccountsResponse) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{14}
}

func (x *ExternalAccountsResponse) GetExternalAccount() []*ExternalAccount {
	if x != nil {
		return x.ExternalAccount
	}
	return nil
}

type SearchDogesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doge []*BaseDoge `protobuf:"bytes,1,rep,name=doge,proto3" json:"doge,omitempty"`
}

func (x *SearchDogesResponse) Reset() {
	*x = SearchDogesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDogesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDogesResponse) ProtoMessage() {}

func (x *SearchDogesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDogesResponse.ProtoReflect.Descriptor instead.
func (*SearchDogesResponse) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{15}
}

func (x *SearchDogesResponse) GetDoge() []*BaseDoge {
	if x != nil {
		return x.Doge
	}
	return nil
}

type PayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount     int64                 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Note       *string               `protobuf:"bytes,2,opt,name=note,proto3,oneof" json:"note,omitempty"`
	RequestId  *int64                `protobuf:"varint,3,opt,name=requestId,proto3,oneof" json:"requestId,omitempty"`
	SourceType PayRequest_SourceType `protobuf:"varint,4,opt,name=source_type,json=sourceType,proto3,enum=proto.PayRequest_SourceType" json:"source_type,omitempty"`
	To         int64                 `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *PayRequest) Reset() {
	*x = PayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayRequest) ProtoMessage() {}

func (x *PayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayRequest.ProtoReflect.Descriptor instead.
func (*PayRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{16}
}

func (x *PayRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PayRequest) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *PayRequest) GetRequestId() int64 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

func (x *PayRequest) GetSourceType() PayRequest_SourceType {
	if x != nil {
		return x.SourceType
	}
	return PayRequest_account
}

func (x *PayRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type SendRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64   `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Note   *string `protobuf:"bytes,2,opt,name=note,proto3,oneof" json:"note,omitempty"`
	To     int64   `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *SendRequestRequest) Reset() {
	*x = SendRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequestRequest) ProtoMessage() {}

func (x *SendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequestRequest.ProtoReflect.Descriptor instead.
func (*SendRequestRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{17}
}

func (x *SendRequestRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendRequestRequest) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *SendRequestRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type AddCashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount              int64  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ExternalAccountType string `protobuf:"bytes,2,opt,name=external_account_type,json=externalAccountType,proto3" json:"external_account_type,omitempty"`
}

func (x *AddCashRequest) Reset() {
	*x = AddCashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCashRequest) ProtoMessage() {}

func (x *AddCashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCashRequest.ProtoReflect.Descriptor instead.
func (*AddCashRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{18}
}

func (x *AddCashRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AddCashRequest) GetExternalAccountType() string {
	if x != nil {
		return x.ExternalAccountType
	}
	return ""
}

type CashOutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount              int64  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ExternalAccountType string `protobuf:"bytes,2,opt,name=external_account_type,json=externalAccountType,proto3" json:"external_account_type,omitempty"`
	Instant             bool   `protobuf:"varint,3,opt,name=instant,proto3" json:"instant,omitempty"`
}

func (x *CashOutRequest) Reset() {
	*x = CashOutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashOutRequest) ProtoMessage() {}

func (x *CashOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashOutRequest.ProtoReflect.Descriptor instead.
func (*CashOutRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{19}
}

func (x *CashOutRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CashOutRequest) GetExternalAccountType() string {
	if x != nil {
		return x.ExternalAccountType
	}
	return ""
}

func (x *CashOutRequest) GetInstant() bool {
	if x != nil {
		return x.Instant
	}
	return false
}

type SearchDogesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Limit *int32 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *SearchDogesRequest) Reset() {
	*x = SearchDogesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDogesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDogesRequest) ProtoMessage() {}

func (x *SearchDogesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDogesRequest.ProtoReflect.Descriptor instead.
func (*SearchDogesRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{20}
}

func (x *SearchDogesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchDogesRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *int64 `protobuf:"varint,1,opt,name=peer,proto3,oneof" json:"peer,omitempty"`
	Limit      *int32 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	ActivityId *int64 `protobuf:"varint,3,opt,name=activityId,proto3,oneof" json:"activityId,omitempty"`
}

func (x *ActivityRequest) Reset() {
	*x = ActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRequest) ProtoMessage() {}

func (x *ActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRequest.ProtoReflect.Descriptor instead.
func (*ActivityRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{21}
}

func (x *ActivityRequest) GetPeer() int64 {
	if x != nil && x.Peer != nil {
		return *x.Peer
	}
	return 0
}

func (x *ActivityRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ActivityRequest) GetActivityId() int64 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ActivityType    Activity_ActivityType `protobuf:"varint,2,opt,name=activity_type,json=activityType,proto3,enum=proto.Activity_ActivityType" json:"activity_type,omitempty"`
	Amount          int64                 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	ArrivalDate     *int64                `protobuf:"varint,4,opt,name=arrival_date,json=arrivalDate,proto3,oneof" json:"arrival_date,omitempty"`
	Created         *int64                `protobuf:"varint,5,opt,name=created,proto3,oneof" json:"created,omitempty"`
	ExternalAccount *ExternalAccount      `protobuf:"bytes,6,opt,name=external_account,json=externalAccount,proto3,oneof" json:"external_account,omitempty"`
	Note            *string               `protobuf:"bytes,7,opt,name=note,proto3,oneof" json:"note,omitempty"`
	Refunded        *bool                 `protobuf:"varint,8,opt,name=refunded,proto3,oneof" json:"refunded,omitempty"`
	SourceId        int64                 `protobuf:"varint,9,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	ToId            *int64                `protobuf:"varint,10,opt,name=to_id,json=toId,proto3,oneof" json:"to_id,omitempty"`
	Peer            *BaseDoge             `protobuf:"bytes,11,opt,name=peer,proto3,oneof" json:"peer,omitempty"`
	Moneyin         *bool                 `protobuf:"varint,12,opt,name=moneyin,proto3,oneof" json:"moneyin,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{22}
}

func (x *Activity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Activity) GetActivityType() Activity_ActivityType {
	if x != nil {
		return x.ActivityType
	}
	return Activity_add_cash
}

func (x *Activity) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Activity) GetArrivalDate() int64 {
	if x != nil && x.ArrivalDate != nil {
		return *x.ArrivalDate
	}
	return 0
}

func (x *Activity) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Activity) GetExternalAccount() *ExternalAccount {
	if x != nil {
		return x.ExternalAccount
	}
	return nil
}

func (x *Activity) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *Activity) GetRefunded() bool {
	if x != nil && x.Refunded != nil {
		return *x.Refunded
	}
	return false
}

func (x *Activity) GetSourceId() int64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *Activity) GetToId() int64 {
	if x != nil && x.ToId != nil {
		return *x.ToId
	}
	return 0
}

func (x *Activity) GetPeer() *BaseDoge {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *Activity) GetMoneyin() bool {
	if x != nil && x.Moneyin != nil {
		return *x.Moneyin
	}
	return false
}

type ActivityRepeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity []*Activity `protobuf:"bytes,1,rep,name=activity,proto3" json:"activity,omitempty"`
}

func (x *ActivityRepeated) Reset() {
	*x = ActivityRepeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRepeated) ProtoMessage() {}

func (x *ActivityRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRepeated.ProtoReflect.Descriptor instead.
func (*ActivityRepeated) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{23}
}

func (x *ActivityRepeated) GetActivity() []*Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type NewCardholderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line1 string `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	City  string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Zip   string `protobuf:"bytes,3,opt,name=zip,proto3" json:"zip,omitempty"`
	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *NewCardholderRequest) Reset() {
	*x = NewCardholderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCardholderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCardholderRequest) ProtoMessage() {}

func (x *NewCardholderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCardholderRequest.ProtoReflect.Descriptor instead.
func (*NewCardholderRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{24}
}

func (x *NewCardholderRequest) GetLine1() string {
	if x != nil {
		return x.Line1
	}
	return ""
}

func (x *NewCardholderRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *NewCardholderRequest) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *NewCardholderRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *NewCardholderRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type DogeCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Full *bool `protobuf:"varint,1,opt,name=full,proto3,oneof" json:"full,omitempty"`
}

func (x *DogeCardRequest) Reset() {
	*x = DogeCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DogeCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DogeCardRequest) ProtoMessage() {}

func (x *DogeCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DogeCardRequest.ProtoReflect.Descriptor instead.
func (*DogeCardRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{25}
}

func (x *DogeCardRequest) GetFull() bool {
	if x != nil && x.Full != nil {
		return *x.Full
	}
	return false
}

type DogeCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand    *string `protobuf:"bytes,1,opt,name=brand,proto3,oneof" json:"brand,omitempty"`
	ExpMonth *int64  `protobuf:"varint,2,opt,name=exp_month,json=expMonth,proto3,oneof" json:"exp_month,omitempty"`
	ExpYear  *int64  `protobuf:"varint,3,opt,name=exp_year,json=expYear,proto3,oneof" json:"exp_year,omitempty"`
	Last4    *string `protobuf:"bytes,4,opt,name=last4,proto3,oneof" json:"last4,omitempty"`
	Number   *string `protobuf:"bytes,5,opt,name=number,proto3,oneof" json:"number,omitempty"`
	Cvc      *string `protobuf:"bytes,6,opt,name=cvc,proto3,oneof" json:"cvc,omitempty"`
}

func (x *DogeCardResponse) Reset() {
	*x = DogeCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DogeCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DogeCardResponse) ProtoMessage() {}

func (x *DogeCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DogeCardResponse.ProtoReflect.Descriptor instead.
func (*DogeCardResponse) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{26}
}

func (x *DogeCardResponse) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *DogeCardResponse) GetExpMonth() int64 {
	if x != nil && x.ExpMonth != nil {
		return *x.ExpMonth
	}
	return 0
}

func (x *DogeCardResponse) GetExpYear() int64 {
	if x != nil && x.ExpYear != nil {
		return *x.ExpYear
	}
	return 0
}

func (x *DogeCardResponse) GetLast4() string {
	if x != nil && x.Last4 != nil {
		return *x.Last4
	}
	return ""
}

func (x *DogeCardResponse) GetNumber() string {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return ""
}

func (x *DogeCardResponse) GetCvc() string {
	if x != nil && x.Cvc != nil {
		return *x.Cvc
	}
	return ""
}

type PredictionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *PredictionsRequest) Reset() {
	*x = PredictionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictionsRequest) ProtoMessage() {}

func (x *PredictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictionsRequest.ProtoReflect.Descriptor instead.
func (*PredictionsRequest) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{27}
}

func (x *PredictionsRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

type PredictionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description []string `protobuf:"bytes,1,rep,name=description,proto3" json:"description,omitempty"`
}

func (x *PredictionsResponse) Reset() {
	*x = PredictionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dogecash_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictionsResponse) ProtoMessage() {}

func (x *PredictionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dogecash_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictionsResponse.ProtoReflect.Descriptor instead.
func (*PredictionsResponse) Descriptor() ([]byte, []int) {
	return file_dogecash_proto_rawDescGZIP(), []int{28}
}

func (x *PredictionsResponse) GetDescription() []string {
	if x != nil {
		return x.Description
	}
	return nil
}

var File_dogecash_proto protoreflect.FileDescriptor

var file_dogecash_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x6f, 0x67, 0x65, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0xc4, 0x02, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x44, 0x6f, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x07, 0x64, 0x6f, 0x67, 0x65, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x6f, 0x67, 0x65, 0x74, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x55,
	0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x6f, 0x67, 0x65, 0x74, 0x61,
	0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x75,
	0x72, 0x6c, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa2, 0x02, 0x0a, 0x0e, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x6f,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x44, 0x6f, 0x67, 0x65, 0x52, 0x04, 0x64, 0x6f, 0x67, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x64, 0x6f,
	0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x64, 0x6f, 0x62, 0x88, 0x01,
	0x01, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x74, 0x72,
	0x69, 0x70, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x73, 0x74, 0x72, 0x69, 0x70,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64,
	0x6f, 0x62, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x33, 0x0a, 0x17,
	0x44, 0x6f, 0x67, 0x65, 0x74, 0x61, 0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x67, 0x65, 0x74,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x67, 0x65, 0x74, 0x61,
	0x67, 0x22, 0x37, 0x0a, 0x17, 0x44, 0x6f, 0x67, 0x65, 0x74, 0x61, 0x67, 0x41, 0x76, 0x61, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x67, 0x65, 0x74, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x67, 0x65, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x67, 0x65, 0x74, 0x61, 0x67, 0x22, 0xfa, 0x01, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x61, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x6b, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x31, 0x0a,
	0x13, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x10, 0x01,
	0x22, 0x2d, 0x0a, 0x15, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x3d, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5c,
	0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x38, 0x0a, 0x0f,
	0x4d, 0x79, 0x44, 0x6f, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x05, 0x64, 0x6f, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x44, 0x6f, 0x67, 0x65, 0x52,
	0x05, 0x64, 0x6f, 0x67, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0xca, 0x02, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x61, 0x73, 0x74,
	0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x61, 0x73, 0x74, 0x34,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x07, 0x65, 0x78, 0x70, 0x59, 0x65,
	0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x08, 0x65, 0x6c, 0x69, 0x67, 0x69,
	0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x34, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x78, 0x70,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x78, 0x70, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65,
	0x22, 0x5d, 0x0a, 0x18, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x10,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x3a, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6f, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x6f, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x44, 0x6f, 0x67, 0x65, 0x52, 0x04, 0x64, 0x6f, 0x67, 0x65, 0x22, 0xfd, 0x01, 0x0a, 0x0a,
	0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3d,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x35, 0x0a,
	0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x61,
	0x72, 0x64, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x12, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x5c, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x43, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a, 0x0e, 0x43, 0x61, 0x73,
	0x68, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x22, 0x4f, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6f, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0xe7, 0x04, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41,
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x46, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x48, 0x02, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05,
	0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x65, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x44, 0x6f, 0x67, 0x65, 0x48, 0x06, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x69, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x69, 0x6e, 0x88,
	0x01, 0x01, 0x22, 0x40, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x70, 0x61, 0x79, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0x03, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x69, 0x6e, 0x22, 0x3f, 0x0a, 0x10, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x2b, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x7e, 0x0a, 0x14,
	0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x33, 0x0a, 0x0f,
	0x44, 0x6f, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x04, 0x66, 0x75, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x75, 0x6c,
	0x6c, 0x22, 0x80, 0x02, 0x0a, 0x10, 0x44, 0x6f, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x65, 0x78, 0x70, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x07, 0x65, 0x78, 0x70, 0x59, 0x65, 0x61, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x61, 0x73, 0x74, 0x34, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x6c, 0x61, 0x73, 0x74, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x63,
	0x76, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x03, 0x63, 0x76, 0x63, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x65, 0x78, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65,
	0x78, 0x70, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x34, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x63, 0x76, 0x63, 0x22, 0x2a, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x22, 0x37, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x2c, 0x0a, 0x0f, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x10, 0x01, 0x32, 0xf5, 0x0b, 0x0a, 0x08, 0x44, 0x6f, 0x67, 0x65,
	0x63, 0x61, 0x73, 0x68, 0x12, 0x37, 0x0a, 0x06, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a,
	0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x52, 0x0a, 0x10, 0x44, 0x6f, 0x67, 0x65, 0x74, 0x61, 0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x67, 0x65,
	0x74, 0x61, 0x67, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x67, 0x65,
	0x74, 0x61, 0x67, 0x41, 0x76, 0x61, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x67,
	0x65, 0x74, 0x61, 0x67, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x67, 0x65, 0x74, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69,
	0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x06, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a,
	0x0a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x4d, 0x79, 0x44, 0x6f, 0x67, 0x65, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x79, 0x44, 0x6f, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x44, 0x6f, 0x67, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x44, 0x6f, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44,
	0x6f, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x29, 0x0a, 0x03, 0x50, 0x61, 0x79, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0b, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x43, 0x61, 0x73,
	0x68, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x31, 0x0a, 0x07, 0x43, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x44, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x43,
	0x61, 0x72, 0x64, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x08, 0x44, 0x6f, 0x67, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x67,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x1b, 0x5a, 0x19, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x33,
	0x77, 0x69, 0x73, 0x2f, 0x64, 0x6f, 0x67, 0x65, 0x63, 0x61, 0x73, 0x68, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dogecash_proto_rawDescOnce sync.Once
	file_dogecash_proto_rawDescData = file_dogecash_proto_rawDesc
)

func file_dogecash_proto_rawDescGZIP() []byte {
	file_dogecash_proto_rawDescOnce.Do(func() {
		file_dogecash_proto_rawDescData = protoimpl.X.CompressGZIP(file_dogecash_proto_rawDescData)
	})
	return file_dogecash_proto_rawDescData
}

var file_dogecash_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_dogecash_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_dogecash_proto_goTypes = []interface{}{
	(InteractionType)(0), // 0: proto.InteractionType
	(UpdateExternalAccountRequest_ExternalAccountType)(0), // 1: proto.UpdateExternalAccountRequest.ExternalAccountType
	(PayRequest_SourceType)(0),                            // 2: proto.PayRequest.SourceType
	(Activity_ActivityType)(0),                            // 3: proto.Activity.ActivityType
	(*AuthenticationRequest)(nil),                         // 4: proto.AuthenticationRequest
	(*BaseDoge)(nil),                                      // 5: proto.BaseDoge
	(*ViewerResponse)(nil),                                // 6: proto.ViewerResponse
	(*DogetagAvailableRequest)(nil),                       // 7: proto.DogetagAvailableRequest
	(*DogetagAvaiableResponse)(nil),                       // 8: proto.DogetagAvaiableResponse
	(*UpdateDogetagRequest)(nil),                          // 9: proto.UpdateDogetagRequest
	(*UpdateStripeInfoRequest)(nil),                       // 10: proto.UpdateStripeInfoRequest
	(*UpdateExternalAccountRequest)(nil),                  // 11: proto.UpdateExternalAccountRequest
	(*ForgotPasswordRequest)(nil),                         // 12: proto.ForgotPasswordRequest
	(*VerifyCodeRequest)(nil),                             // 13: proto.VerifyCodeRequest
	(*ResetPasswordRequest)(nil),                          // 14: proto.ResetPasswordRequest
	(*MyDogesResponse)(nil),                               // 15: proto.MyDogesResponse
	(*BalanceResponse)(nil),                               // 16: proto.BalanceResponse
	(*ExternalAccount)(nil),                               // 17: proto.ExternalAccount
	(*ExternalAccountsResponse)(nil),                      // 18: proto.ExternalAccountsResponse
	(*SearchDogesResponse)(nil),                           // 19: proto.SearchDogesResponse
	(*PayRequest)(nil),                                    // 20: proto.PayRequest
	(*SendRequestRequest)(nil),                            // 21: proto.SendRequestRequest
	(*AddCashRequest)(nil),                                // 22: proto.AddCashRequest
	(*CashOutRequest)(nil),                                // 23: proto.CashOutRequest
	(*SearchDogesRequest)(nil),                            // 24: proto.SearchDogesRequest
	(*ActivityRequest)(nil),                               // 25: proto.ActivityRequest
	(*Activity)(nil),                                      // 26: proto.Activity
	(*ActivityRepeated)(nil),                              // 27: proto.ActivityRepeated
	(*NewCardholderRequest)(nil),                          // 28: proto.NewCardholderRequest
	(*DogeCardRequest)(nil),                               // 29: proto.DogeCardRequest
	(*DogeCardResponse)(nil),                              // 30: proto.DogeCardResponse
	(*PredictionsRequest)(nil),                            // 31: proto.PredictionsRequest
	(*PredictionsResponse)(nil),                           // 32: proto.PredictionsResponse
	(*timestamppb.Timestamp)(nil),                         // 33: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                 // 34: google.protobuf.Empty
}
var file_dogecash_proto_depIdxs = []int32{
	5,  // 0: proto.ViewerResponse.doge:type_name -> proto.BaseDoge
	33, // 1: proto.ViewerResponse.created_at:type_name -> google.protobuf.Timestamp
	1,  // 2: proto.UpdateExternalAccountRequest.external_account_type:type_name -> proto.UpdateExternalAccountRequest.ExternalAccountType
	5,  // 3: proto.MyDogesResponse.doges:type_name -> proto.BaseDoge
	17, // 4: proto.ExternalAccountsResponse.external_account:type_name -> proto.ExternalAccount
	5,  // 5: proto.SearchDogesResponse.doge:type_name -> proto.BaseDoge
	2,  // 6: proto.PayRequest.source_type:type_name -> proto.PayRequest.SourceType
	3,  // 7: proto.Activity.activity_type:type_name -> proto.Activity.ActivityType
	17, // 8: proto.Activity.external_account:type_name -> proto.ExternalAccount
	5,  // 9: proto.Activity.peer:type_name -> proto.BaseDoge
	26, // 10: proto.ActivityRepeated.activity:type_name -> proto.Activity
	34, // 11: proto.Dogecash.Viewer:input_type -> google.protobuf.Empty
	4,  // 12: proto.Dogecash.SignIn:input_type -> proto.AuthenticationRequest
	4,  // 13: proto.Dogecash.Register:input_type -> proto.AuthenticationRequest
	7,  // 14: proto.Dogecash.DogetagAvailable:input_type -> proto.DogetagAvailableRequest
	9,  // 15: proto.Dogecash.UpdateDogetag:input_type -> proto.UpdateDogetagRequest
	10, // 16: proto.Dogecash.UpdateStripeInfo:input_type -> proto.UpdateStripeInfoRequest
	11, // 17: proto.Dogecash.UpdateExternalAccount:input_type -> proto.UpdateExternalAccountRequest
	34, // 18: proto.Dogecash.Logout:input_type -> google.protobuf.Empty
	12, // 19: proto.Dogecash.ForgotPassword:input_type -> proto.ForgotPasswordRequest
	13, // 20: proto.Dogecash.VerifyCode:input_type -> proto.VerifyCodeRequest
	14, // 21: proto.Dogecash.ResetPassword:input_type -> proto.ResetPasswordRequest
	34, // 22: proto.Dogecash.MyDoges:input_type -> google.protobuf.Empty
	34, // 23: proto.Dogecash.Balance:input_type -> google.protobuf.Empty
	34, // 24: proto.Dogecash.ExternalAccounts:input_type -> google.protobuf.Empty
	24, // 25: proto.Dogecash.SearchDoges:input_type -> proto.SearchDogesRequest
	20, // 26: proto.Dogecash.Pay:input_type -> proto.PayRequest
	21, // 27: proto.Dogecash.SendRequest:input_type -> proto.SendRequestRequest
	22, // 28: proto.Dogecash.AddCash:input_type -> proto.AddCashRequest
	23, // 29: proto.Dogecash.CashOut:input_type -> proto.CashOutRequest
	25, // 30: proto.Dogecash.Activities:input_type -> proto.ActivityRequest
	28, // 31: proto.Dogecash.NewCardholder:input_type -> proto.NewCardholderRequest
	29, // 32: proto.Dogecash.DogeCard:input_type -> proto.DogeCardRequest
	31, // 33: proto.Dogecash.Predictions:input_type -> proto.PredictionsRequest
	6,  // 34: proto.Dogecash.Viewer:output_type -> proto.ViewerResponse
	34, // 35: proto.Dogecash.SignIn:output_type -> google.protobuf.Empty
	34, // 36: proto.Dogecash.Register:output_type -> google.protobuf.Empty
	8,  // 37: proto.Dogecash.DogetagAvailable:output_type -> proto.DogetagAvaiableResponse
	34, // 38: proto.Dogecash.UpdateDogetag:output_type -> google.protobuf.Empty
	34, // 39: proto.Dogecash.UpdateStripeInfo:output_type -> google.protobuf.Empty
	34, // 40: proto.Dogecash.UpdateExternalAccount:output_type -> google.protobuf.Empty
	34, // 41: proto.Dogecash.Logout:output_type -> google.protobuf.Empty
	34, // 42: proto.Dogecash.ForgotPassword:output_type -> google.protobuf.Empty
	34, // 43: proto.Dogecash.VerifyCode:output_type -> google.protobuf.Empty
	34, // 44: proto.Dogecash.ResetPassword:output_type -> google.protobuf.Empty
	15, // 45: proto.Dogecash.MyDoges:output_type -> proto.MyDogesResponse
	16, // 46: proto.Dogecash.Balance:output_type -> proto.BalanceResponse
	18, // 47: proto.Dogecash.ExternalAccounts:output_type -> proto.ExternalAccountsResponse
	19, // 48: proto.Dogecash.SearchDoges:output_type -> proto.SearchDogesResponse
	26, // 49: proto.Dogecash.Pay:output_type -> proto.Activity
	26, // 50: proto.Dogecash.SendRequest:output_type -> proto.Activity
	34, // 51: proto.Dogecash.AddCash:output_type -> google.protobuf.Empty
	26, // 52: proto.Dogecash.CashOut:output_type -> proto.Activity
	27, // 53: proto.Dogecash.Activities:output_type -> proto.ActivityRepeated
	34, // 54: proto.Dogecash.NewCardholder:output_type -> google.protobuf.Empty
	30, // 55: proto.Dogecash.DogeCard:output_type -> proto.DogeCardResponse
	32, // 56: proto.Dogecash.Predictions:output_type -> proto.PredictionsResponse
	34, // [34:57] is the sub-list for method output_type
	11, // [11:34] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_dogecash_proto_init() }
func file_dogecash_proto_init() {
	if File_dogecash_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dogecash_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseDoge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DogetagAvailableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DogetagAvaiableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDogetagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStripeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExternalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgotPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyDogesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDogesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashOutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDogesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityRepeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCardholderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DogeCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DogeCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dogecash_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dogecash_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_dogecash_proto_msgTypes[26].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dogecash_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dogecash_proto_goTypes,
		DependencyIndexes: file_dogecash_proto_depIdxs,
		EnumInfos:         file_dogecash_proto_enumTypes,
		MessageInfos:      file_dogecash_proto_msgTypes,
	}.Build()
	File_dogecash_proto = out.File
	file_dogecash_proto_rawDesc = nil
	file_dogecash_proto_goTypes = nil
	file_dogecash_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DogecashClient is the client API for Dogecash service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DogecashClient interface {
	Viewer(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ViewerResponse, error)
	SignIn(ctx context.Context, in *AuthenticationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Register(ctx context.Context, in *AuthenticationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DogetagAvailable(ctx context.Context, in *DogetagAvailableRequest, opts ...grpc.CallOption) (*DogetagAvaiableResponse, error)
	UpdateDogetag(ctx context.Context, in *UpdateDogetagRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateStripeInfo(ctx context.Context, in *UpdateStripeInfoRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateExternalAccount(ctx context.Context, in *UpdateExternalAccountRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Logout(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	VerifyCode(ctx context.Context, in *VerifyCodeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	MyDoges(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*MyDogesResponse, error)
	Balance(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*BalanceResponse, error)
	ExternalAccounts(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ExternalAccountsResponse, error)
	SearchDoges(ctx context.Context, opts ...grpc.CallOption) (Dogecash_SearchDogesClient, error)
	Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*Activity, error)
	SendRequest(ctx context.Context, in *SendRequestRequest, opts ...grpc.CallOption) (*Activity, error)
	AddCash(ctx context.Context, in *AddCashRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CashOut(ctx context.Context, in *CashOutRequest, opts ...grpc.CallOption) (*Activity, error)
	Activities(ctx context.Context, in *ActivityRequest, opts ...grpc.CallOption) (*ActivityRepeated, error)
	NewCardholder(ctx context.Context, in *NewCardholderRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DogeCard(ctx context.Context, in *DogeCardRequest, opts ...grpc.CallOption) (*DogeCardResponse, error)
	Predictions(ctx context.Context, opts ...grpc.CallOption) (Dogecash_PredictionsClient, error)
}

type dogecashClient struct {
	cc grpc.ClientConnInterface
}

func NewDogecashClient(cc grpc.ClientConnInterface) DogecashClient {
	return &dogecashClient{cc}
}

func (c *dogecashClient) Viewer(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ViewerResponse, error) {
	out := new(ViewerResponse)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/Viewer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) SignIn(ctx context.Context, in *AuthenticationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) Register(ctx context.Context, in *AuthenticationRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) DogetagAvailable(ctx context.Context, in *DogetagAvailableRequest, opts ...grpc.CallOption) (*DogetagAvaiableResponse, error) {
	out := new(DogetagAvaiableResponse)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/DogetagAvailable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) UpdateDogetag(ctx context.Context, in *UpdateDogetagRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/UpdateDogetag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) UpdateStripeInfo(ctx context.Context, in *UpdateStripeInfoRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/UpdateStripeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) UpdateExternalAccount(ctx context.Context, in *UpdateExternalAccountRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/UpdateExternalAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) Logout(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/ForgotPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) VerifyCode(ctx context.Context, in *VerifyCodeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/VerifyCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/ResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) MyDoges(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*MyDogesResponse, error) {
	out := new(MyDogesResponse)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/MyDoges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) Balance(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*BalanceResponse, error) {
	out := new(BalanceResponse)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/Balance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) ExternalAccounts(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ExternalAccountsResponse, error) {
	out := new(ExternalAccountsResponse)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/ExternalAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) SearchDoges(ctx context.Context, opts ...grpc.CallOption) (Dogecash_SearchDogesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dogecash_serviceDesc.Streams[0], "/proto.Dogecash/SearchDoges", opts...)
	if err != nil {
		return nil, err
	}
	x := &dogecashSearchDogesClient{stream}
	return x, nil
}

type Dogecash_SearchDogesClient interface {
	Send(*SearchDogesRequest) error
	Recv() (*SearchDogesResponse, error)
	grpc.ClientStream
}

type dogecashSearchDogesClient struct {
	grpc.ClientStream
}

func (x *dogecashSearchDogesClient) Send(m *SearchDogesRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dogecashSearchDogesClient) Recv() (*SearchDogesResponse, error) {
	m := new(SearchDogesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dogecashClient) Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*Activity, error) {
	out := new(Activity)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/Pay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) SendRequest(ctx context.Context, in *SendRequestRequest, opts ...grpc.CallOption) (*Activity, error) {
	out := new(Activity)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/SendRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) AddCash(ctx context.Context, in *AddCashRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/AddCash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) CashOut(ctx context.Context, in *CashOutRequest, opts ...grpc.CallOption) (*Activity, error) {
	out := new(Activity)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/CashOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) Activities(ctx context.Context, in *ActivityRequest, opts ...grpc.CallOption) (*ActivityRepeated, error) {
	out := new(ActivityRepeated)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/Activities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) NewCardholder(ctx context.Context, in *NewCardholderRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/NewCardholder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) DogeCard(ctx context.Context, in *DogeCardRequest, opts ...grpc.CallOption) (*DogeCardResponse, error) {
	out := new(DogeCardResponse)
	err := c.cc.Invoke(ctx, "/proto.Dogecash/DogeCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dogecashClient) Predictions(ctx context.Context, opts ...grpc.CallOption) (Dogecash_PredictionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dogecash_serviceDesc.Streams[1], "/proto.Dogecash/Predictions", opts...)
	if err != nil {
		return nil, err
	}
	x := &dogecashPredictionsClient{stream}
	return x, nil
}

type Dogecash_PredictionsClient interface {
	Send(*PredictionsRequest) error
	Recv() (*PredictionsResponse, error)
	grpc.ClientStream
}

type dogecashPredictionsClient struct {
	grpc.ClientStream
}

func (x *dogecashPredictionsClient) Send(m *PredictionsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dogecashPredictionsClient) Recv() (*PredictionsResponse, error) {
	m := new(PredictionsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DogecashServer is the server API for Dogecash service.
type DogecashServer interface {
	Viewer(context.Context, *emptypb.Empty) (*ViewerResponse, error)
	SignIn(context.Context, *AuthenticationRequest) (*emptypb.Empty, error)
	Register(context.Context, *AuthenticationRequest) (*emptypb.Empty, error)
	DogetagAvailable(context.Context, *DogetagAvailableRequest) (*DogetagAvaiableResponse, error)
	UpdateDogetag(context.Context, *UpdateDogetagRequest) (*emptypb.Empty, error)
	UpdateStripeInfo(context.Context, *UpdateStripeInfoRequest) (*emptypb.Empty, error)
	UpdateExternalAccount(context.Context, *UpdateExternalAccountRequest) (*emptypb.Empty, error)
	Logout(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	ForgotPassword(context.Context, *ForgotPasswordRequest) (*emptypb.Empty, error)
	VerifyCode(context.Context, *VerifyCodeRequest) (*emptypb.Empty, error)
	ResetPassword(context.Context, *ResetPasswordRequest) (*emptypb.Empty, error)
	MyDoges(context.Context, *emptypb.Empty) (*MyDogesResponse, error)
	Balance(context.Context, *emptypb.Empty) (*BalanceResponse, error)
	ExternalAccounts(context.Context, *emptypb.Empty) (*ExternalAccountsResponse, error)
	SearchDoges(Dogecash_SearchDogesServer) error
	Pay(context.Context, *PayRequest) (*Activity, error)
	SendRequest(context.Context, *SendRequestRequest) (*Activity, error)
	AddCash(context.Context, *AddCashRequest) (*emptypb.Empty, error)
	CashOut(context.Context, *CashOutRequest) (*Activity, error)
	Activities(context.Context, *ActivityRequest) (*ActivityRepeated, error)
	NewCardholder(context.Context, *NewCardholderRequest) (*emptypb.Empty, error)
	DogeCard(context.Context, *DogeCardRequest) (*DogeCardResponse, error)
	Predictions(Dogecash_PredictionsServer) error
}

// UnimplementedDogecashServer can be embedded to have forward compatible implementations.
type UnimplementedDogecashServer struct {
}

func (*UnimplementedDogecashServer) Viewer(context.Context, *emptypb.Empty) (*ViewerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Viewer not implemented")
}
func (*UnimplementedDogecashServer) SignIn(context.Context, *AuthenticationRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignIn not implemented")
}
func (*UnimplementedDogecashServer) Register(context.Context, *AuthenticationRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedDogecashServer) DogetagAvailable(context.Context, *DogetagAvailableRequest) (*DogetagAvaiableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DogetagAvailable not implemented")
}
func (*UnimplementedDogecashServer) UpdateDogetag(context.Context, *UpdateDogetagRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDogetag not implemented")
}
func (*UnimplementedDogecashServer) UpdateStripeInfo(context.Context, *UpdateStripeInfoRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStripeInfo not implemented")
}
func (*UnimplementedDogecashServer) UpdateExternalAccount(context.Context, *UpdateExternalAccountRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateExternalAccount not implemented")
}
func (*UnimplementedDogecashServer) Logout(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedDogecashServer) ForgotPassword(context.Context, *ForgotPasswordRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForgotPassword not implemented")
}
func (*UnimplementedDogecashServer) VerifyCode(context.Context, *VerifyCodeRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyCode not implemented")
}
func (*UnimplementedDogecashServer) ResetPassword(context.Context, *ResetPasswordRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPassword not implemented")
}
func (*UnimplementedDogecashServer) MyDoges(context.Context, *emptypb.Empty) (*MyDogesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MyDoges not implemented")
}
func (*UnimplementedDogecashServer) Balance(context.Context, *emptypb.Empty) (*BalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance not implemented")
}
func (*UnimplementedDogecashServer) ExternalAccounts(context.Context, *emptypb.Empty) (*ExternalAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExternalAccounts not implemented")
}
func (*UnimplementedDogecashServer) SearchDoges(Dogecash_SearchDogesServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchDoges not implemented")
}
func (*UnimplementedDogecashServer) Pay(context.Context, *PayRequest) (*Activity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pay not implemented")
}
func (*UnimplementedDogecashServer) SendRequest(context.Context, *SendRequestRequest) (*Activity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendRequest not implemented")
}
func (*UnimplementedDogecashServer) AddCash(context.Context, *AddCashRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCash not implemented")
}
func (*UnimplementedDogecashServer) CashOut(context.Context, *CashOutRequest) (*Activity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CashOut not implemented")
}
func (*UnimplementedDogecashServer) Activities(context.Context, *ActivityRequest) (*ActivityRepeated, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Activities not implemented")
}
func (*UnimplementedDogecashServer) NewCardholder(context.Context, *NewCardholderRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewCardholder not implemented")
}
func (*UnimplementedDogecashServer) DogeCard(context.Context, *DogeCardRequest) (*DogeCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DogeCard not implemented")
}
func (*UnimplementedDogecashServer) Predictions(Dogecash_PredictionsServer) error {
	return status.Errorf(codes.Unimplemented, "method Predictions not implemented")
}

func RegisterDogecashServer(s *grpc.Server, srv DogecashServer) {
	s.RegisterService(&_Dogecash_serviceDesc, srv)
}

func _Dogecash_Viewer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).Viewer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/Viewer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).Viewer(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).SignIn(ctx, req.(*AuthenticationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).Register(ctx, req.(*AuthenticationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_DogetagAvailable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DogetagAvailableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).DogetagAvailable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/DogetagAvailable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).DogetagAvailable(ctx, req.(*DogetagAvailableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_UpdateDogetag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDogetagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).UpdateDogetag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/UpdateDogetag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).UpdateDogetag(ctx, req.(*UpdateDogetagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_UpdateStripeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStripeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).UpdateStripeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/UpdateStripeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).UpdateStripeInfo(ctx, req.(*UpdateStripeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_UpdateExternalAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateExternalAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).UpdateExternalAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/UpdateExternalAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).UpdateExternalAccount(ctx, req.(*UpdateExternalAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).Logout(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_ForgotPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForgotPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).ForgotPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/ForgotPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).ForgotPassword(ctx, req.(*ForgotPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_VerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).VerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/VerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).VerifyCode(ctx, req.(*VerifyCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_MyDoges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).MyDoges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/MyDoges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).MyDoges(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_Balance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).Balance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/Balance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).Balance(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_ExternalAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).ExternalAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/ExternalAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).ExternalAccounts(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_SearchDoges_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DogecashServer).SearchDoges(&dogecashSearchDogesServer{stream})
}

type Dogecash_SearchDogesServer interface {
	Send(*SearchDogesResponse) error
	Recv() (*SearchDogesRequest, error)
	grpc.ServerStream
}

type dogecashSearchDogesServer struct {
	grpc.ServerStream
}

func (x *dogecashSearchDogesServer) Send(m *SearchDogesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dogecashSearchDogesServer) Recv() (*SearchDogesRequest, error) {
	m := new(SearchDogesRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Dogecash_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).Pay(ctx, req.(*PayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_SendRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).SendRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/SendRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).SendRequest(ctx, req.(*SendRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_AddCash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).AddCash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/AddCash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).AddCash(ctx, req.(*AddCashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_CashOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CashOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).CashOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/CashOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).CashOut(ctx, req.(*CashOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_Activities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).Activities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/Activities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).Activities(ctx, req.(*ActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_NewCardholder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewCardholderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).NewCardholder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/NewCardholder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).NewCardholder(ctx, req.(*NewCardholderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_DogeCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DogeCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DogecashServer).DogeCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dogecash/DogeCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DogecashServer).DogeCard(ctx, req.(*DogeCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dogecash_Predictions_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DogecashServer).Predictions(&dogecashPredictionsServer{stream})
}

type Dogecash_PredictionsServer interface {
	Send(*PredictionsResponse) error
	Recv() (*PredictionsRequest, error)
	grpc.ServerStream
}

type dogecashPredictionsServer struct {
	grpc.ServerStream
}

func (x *dogecashPredictionsServer) Send(m *PredictionsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dogecashPredictionsServer) Recv() (*PredictionsRequest, error) {
	m := new(PredictionsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Dogecash_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Dogecash",
	HandlerType: (*DogecashServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Viewer",
			Handler:    _Dogecash_Viewer_Handler,
		},
		{
			MethodName: "SignIn",
			Handler:    _Dogecash_SignIn_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Dogecash_Register_Handler,
		},
		{
			MethodName: "DogetagAvailable",
			Handler:    _Dogecash_DogetagAvailable_Handler,
		},
		{
			MethodName: "UpdateDogetag",
			Handler:    _Dogecash_UpdateDogetag_Handler,
		},
		{
			MethodName: "UpdateStripeInfo",
			Handler:    _Dogecash_UpdateStripeInfo_Handler,
		},
		{
			MethodName: "UpdateExternalAccount",
			Handler:    _Dogecash_UpdateExternalAccount_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Dogecash_Logout_Handler,
		},
		{
			MethodName: "ForgotPassword",
			Handler:    _Dogecash_ForgotPassword_Handler,
		},
		{
			MethodName: "VerifyCode",
			Handler:    _Dogecash_VerifyCode_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _Dogecash_ResetPassword_Handler,
		},
		{
			MethodName: "MyDoges",
			Handler:    _Dogecash_MyDoges_Handler,
		},
		{
			MethodName: "Balance",
			Handler:    _Dogecash_Balance_Handler,
		},
		{
			MethodName: "ExternalAccounts",
			Handler:    _Dogecash_ExternalAccounts_Handler,
		},
		{
			MethodName: "Pay",
			Handler:    _Dogecash_Pay_Handler,
		},
		{
			MethodName: "SendRequest",
			Handler:    _Dogecash_SendRequest_Handler,
		},
		{
			MethodName: "AddCash",
			Handler:    _Dogecash_AddCash_Handler,
		},
		{
			MethodName: "CashOut",
			Handler:    _Dogecash_CashOut_Handler,
		},
		{
			MethodName: "Activities",
			Handler:    _Dogecash_Activities_Handler,
		},
		{
			MethodName: "NewCardholder",
			Handler:    _Dogecash_NewCardholder_Handler,
		},
		{
			MethodName: "DogeCard",
			Handler:    _Dogecash_DogeCard_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchDoges",
			Handler:       _Dogecash_SearchDoges_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Predictions",
			Handler:       _Dogecash_Predictions_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "dogecash.proto",
}
